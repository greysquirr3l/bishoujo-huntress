name: Check GitHub Action Updates

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:
    inputs:
      update_actions:
        description: "Update actions automatically (without confirmation)"
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  check-action-updates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Harden Runner
        if: github.actor != 'nektos/act' # Skip when running with ACT locally
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.12.1 # v2.12.0
        with:
          egress-policy: block
          allowed-endpoints: |
            *.blob.core.windows.net:443
            *.githubusercontent.com:443
            api.github.com:443
            api.huntress.io:443
            api.osv.dev:443
            archive.ubuntu.com:443
            artifactcache.actions.githubusercontent.com:443
            cloud.google.com:443
            codeload.github.com:443
            dl.google.com:443
            files.pythonhosted.org:443
            ghcr.io:443
            github.com:443
            go.opentelemetry.io:443
            golang.org:443
            golangci-lint.run:443
            google.golang.org:443
            objects.githubusercontent.com:443
            packages.microsoft.com:443
            pkg-containers.githubusercontent.com:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            registry.npmjs.org:443
            releases.github.com:443
            repo1.maven.org:443
            security.ubuntu.com:443
            semgrep.dev:443
            storage.googleapis.com:443
            sum.golang.org:443

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24.4"

      - name: Cache Go modules
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-action-updates-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-action-updates-
            ${{ runner.os }}-go-

      - name: Build GitHub CI hash checker
        run: go build -o ./build/github-ci-hash ./cmd/github-ci-hash/

      - name: Check for GitHub Action updates
        id: check_updates
        run: |
          echo "Checking for GitHub Action updates..."
          if ./build/github-ci-hash check > update-report.txt 2>&1; then
            echo "check_success=true" >> $GITHUB_OUTPUT
          else
            echo "check_success=false" >> $GITHUB_OUTPUT
          fi

          # Check if there are any updates available
          if grep -q "ðŸ”„ Update available" update-report.txt; then
            echo "updates_available=true" >> $GITHUB_OUTPUT
            echo "Updates are available!"
          else
            echo "updates_available=false" >> $GITHUB_OUTPUT
            echo "All actions are up to date."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload update report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: action-update-report
          path: update-report.txt

      - name: Create Pull Request for updates
        if: steps.check_updates.outputs.updates_available == 'true' && github.event.inputs.update_actions == 'true'
        run: |
          echo "Auto-updating GitHub Actions..."
          # Note: This would require implementing a non-interactive update mode
          # For now, we'll create an issue instead
          echo "Creating issue for manual review..."

      - name: Create Issue for manual updates
        if: steps.check_updates.outputs.updates_available == 'true' && github.event.inputs.update_actions != 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1 # v7.0.1
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('update-report.txt', 'utf8');

            const issueBody = `## GitHub Action Updates Available

            The weekly scan has found GitHub Actions that can be updated to newer versions.

            ### Update Report
            \`\`\`
            ${report}
            \`\`\`

            ### Next Steps
            To update the actions, run:
            \`\`\`bash
            make ci-hash-update
            \`\`\`

            Or update individual workflows:
            \`\`\`bash
            ./build/github-ci-hash update .github/workflows/ci.yml
            \`\`\`

            ### Verification
            After updating, verify all actions are properly pinned:
            \`\`\`bash
            make ci-hash-verify
            \`\`\`

            ---
            *This issue was automatically created by the Action Update Checker workflow.*`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `GitHub Action Updates Available - ${new Date().toISOString().split('T')[0]}`,
              body: issueBody,
              labels: ['dependencies', 'security', 'ci/cd']
            });

      - name: Verify all actions are still pinned
        if: always()
        run: |
          echo "Verifying all actions are pinned to SHAs..."
          ./build/github-ci-hash verify
