# OSSF Scorecard workflow for security best practices
name: OSSF Scorecard
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: "0 12 * * 1"

permissions: # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  scorecard:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      id-token: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: block
          allowed-endpoints: |
            api.github.com:443
            api.huntress.io:443
            archive.ubuntu.com:443
            artifactcache.actions.githubusercontent.com:443
            dl.google.com:443
            files.pythonhosted.org:443
            ghcr.io:443
            github.com:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            registry.npmjs.org:443
            security.ubuntu.com:443
            semgrep.dev:443
            storage.googleapis.com:443
            sum.golang.org:443
            *.blob.core.windows.net:443

      - name: Checkout code
        # OSSF Scorecard: SHA pinning required for supply chain security
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: OSSF Scorecard action
        # OSSF Scorecard: SHA pinning required for supply chain security
        uses: ossf/scorecard-action@f49aabe0b5af0936a0987cfb85d86b75731b0186 # v2.4.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: Upload Scorecard results to GitHub Security tab
        # OSSF Scorecard: SHA pinning required for supply chain security
        uses: github/codeql-action/upload-sarif@3d392940475e4c472e143ff2fd41aaffb1178094 # codeql-bundle-20221007
        with:
          sarif_file: results.sarif

  ossf-artifacts:
    runs-on: ubuntu-latest
    needs: scorecard
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: block
          allowed-endpoints: |
            api.github.com:443
            api.huntress.io:443
            archive.ubuntu.com:443
            artifactcache.actions.githubusercontent.com:443
            dl.google.com:443
            files.pythonhosted.org:443
            ghcr.io:443
            github.com:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            proxy.golang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            registry.npmjs.org:443
            security.ubuntu.com:443
            semgrep.dev:443
            storage.googleapis.com:443
            sum.golang.org:443
            *.blob.core.windows.net:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install security tools
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y git curl make coreutils
          # Install golangci-lint v2.1.6 (no SHA256 pinning)
          GOLANGCI_LINT_VERSION=v2.1.6
          curl -sSfL -o golangci-lint.tar.gz "https://github.com/golangci-lint/releases/download/${GOLANGCI_LINT_VERSION}/golangci-lint-2.1.6-linux-amd64.tar.gz"
          tar -xzf golangci-lint.tar.gz
          sudo mv golangci-lint-2.1.6-linux-amd64/golangci-lint /usr/local/bin/
          rm -rf golangci-lint.tar.gz golangci-lint-2.1.6-linux-amd64
          # Install gosec pinned version
          go install github.com/securego/gosec/v2/cmd/gosec@v2.19.0
          # Install govulncheck pinned version
          go install golang.org/x/vuln/cmd/govulncheck@v1.1.4
          # Install git-secrets pinned by commit
          GIT_SECRETS_COMMIT="ad82d68ee924906a0401dfd48de5057731a9bc84"
          git clone https://github.com/awslabs/git-secrets.git
          cd git-secrets && git checkout $GIT_SECRETS_COMMIT && sudo make install && cd .. && rm -rf git-secrets
          # Add Go bin to PATH
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run OSSF attestation script
        run: ./ossf-attest.sh

      - name: Upload OSSF attestation artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ossf-attestation
          path: |
            golangci-lint.txt
            gosec.txt
            govulncheck.txt
            git-secrets.txt
            sbom.json
            test-results.txt
            coverage.txt

      - name: Run golangci-lint (v2)
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.1.6
          args: --timeout=5m
          github-token: ${{ secrets.GITHUB_TOKEN }}
          only-new-issues: false
          skip-cache: false
          install-mode: binary
