               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 133 files tracked by git with 2452 Code rules:
                                                                                                                        
  Language      Rules   Files          Origin      Rules                                                                
 ─────────────────────────────        ───────────────────                                                               
  <multilang>      48     133          Pro rules    1390                                                                
  go              147      73          Community    1062                                                                
  yaml             31      11                                                                                           
  json              4       4                                                                                           
  bash              4       3                                                                                           
                                                                                                                        
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
✅ Scan completed successfully.
 • Findings: 1 (1 blocking)
 • Rules run: 231
 • Targets scanned: 133
 • Parsed lines: ~99.9%
 • Scan skipped: 
   ◦ Files larger than  files 1.0 MB: 1
   ◦ Files matching .semgrepignore patterns: 48
 • Scan was limited to files tracked by git
 • For a detailed list of skipped files and lines, run semgrep with the --verbose flag
Ran 231 rules on 133 files: 1 finding.
                  
                  
┌────────────────┐
│ 1 Code Finding │
└────────────────┘
                                          
    internal/infrastructure/http/client.go
    ❯❱ trailofbits.go.invalid-usage-of-modified-variable.invalid-usage-of-modified-variable
          Variable `resp` is likely modified and later used on error. In some cases this could result  in
          panics due to a nil dereference                                                                
          Details: https://sg.run/WWQ2                                                                   
                                                                                                         
          169┆ resp, err = retrier.Do(ctx, func() (*http.Response, error) {
          170┆    return c.HTTPClient.Do(req)
          171┆ })
          172┆ if err != nil {
          173┆    if resp != nil {
          174┆            if closeErr := resp.Body.Close(); closeErr != nil {
          175┆                    logging.GetLogger().Error("failed to close response body",
               logging.Field{Key: "error", Value: closeErr})                                
          176┆            }
          177┆    }
          178┆    return nil, fmt.Errorf("request failed after retries: %w", err)
             [hid 1 additional lines, adjust with --max-lines-per-finding] 

